// 8.17 (2)效率較好版本
#include <stdio.h>
#include <stdlib.h>
#define MAX 10000
int find_k(int);
double Euler(int);
int is_prime(int);
void find_prime(int);

int prime[MAX];
int main(void)
{
    find_prime(MAX);
    printf("%1f\n", Euler(10));
    printf("%1f\n", Euler(100));
    printf("%1f\n", Euler(1000));
    printf("%1f\n", Euler(10000));
    return 0;
}

double Euler(int x) //用來估算到第x項
{
    int i;
    double sum = 1;
    for (i = 0; i < x; i++)
    {
        sum *= (float)prime[i] / find_k(prime[i]); //第一項質數,和把質數帶進find_k裡,所算出的分母
    }
    return 2 * sum;
}

void find_prime(int x)
{
    int i = 0, j, total = 0;
    for (j = 3; total < x; j++)
    {
        if (is_prime(j))
        {
            total++;
            prime[i] = j; //左邊是你想要去assign的
            i++;
        }
    }
}
int is_prime(int y) //找是否為質數
{
    int i;
    for (i = 2; i <= y - 1; i++)
    {
        if (y % i == 0)
            return 0;
    }
    return 1;
}

int find_k(int n) //由給的值數去找分母
{
    int a, k;
    a = (n - 2) % 4;
    k = (n - 2) / 4;
    if (n <= 0)
        return 0;
    else if (a > 2)
        k = k + 1;
    return 4 * k + 2;
}